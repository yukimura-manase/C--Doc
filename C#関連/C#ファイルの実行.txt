

開発のスピードを上げるためには、簡単なコードを書いて検証していくことが欠かせません。

今回は、普段Visual StudioでC#を書いている皆様に、テキストエディター＆コマンドプロンプトで
C#ソースファイルをコンパイルする方法をご紹介させていただきます。



ビルドツール
C#ソースコードをコマンドプロンプトでコンパイルできるツールは以下の２つがあります。

* csc 
* dotnet

cscは、C#のコンパイラです。
dotnetは複数のC#ファイルからアプリケーションを簡単に作ることが出来るツールです。
どちらもコマンドプロンプトからC#ソースコードをコンパイルし、実行ファイル(exe)を生成することが出来ますが、
dotnetはパッケージを作成して行う必要があるなど、ちょっとした検証コードを確認するためには少し大げさです。

検証コードはいかに素早く確認できるかが鍵なので、直接cscを使って実行ファイルを生成して確認します。


[ cscを使って検証コードのビルド方法 ]


cscを使う方法は３つあります。

1.  Windowsにインストールされているcsc
2. Visual Studioに梱包されているcsc
3. github上に上がっている最新のcsc

1は、以下に格納されています

C:\Windows\Microsoft.NET\Framework\v4.0.30319

上記は、Framework配下にv4.0.30319以外にもいくつかのバージョンが用意されています。
ただしこちら最新のバージョンのC#ではなく、C#5までしか対応していません。

2は無償版のVisual Studioをインストールしている場合は、以下に格納されています。

C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\Roslyn

3はこちらで配布されています。

https://github.com/dotnet/roslyn

コマンドプロンプト上で、どこでも上記のツールを簡単に呼び出すためには、環境変数に使用したいcscのパスを追加します。




コマンドプロンプトでC#を実行する with csc
https://www.gigas-jp.com/appnews/archives/6557








----------------------------------------------------------------------------------------------------------------------------------------

コマンド・プロンプトでコンパイルする場合
　コマンド・プロンプトでC#のソース・コードをコンパイルするには、C#のコンパイラであるcsc.exeを使用する。このcsc.exeは標準で、

C:\WINDOWS\Microsoft.NET\Framework\v1.0.3705

にインストールされる（Windows XPの場合）。.NET Framework SDKのみの環境では、そのインストーラによってデフォルトでpath環境変数にこのパスが追加されているはずだ。このような環境では、プロンプトで、

csc helloworld.cs



C#のソース・コードを実行するには？
https://atmarkit.itmedia.co.jp/fdotnet/dotnettips/002csc/csc.html

----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------
